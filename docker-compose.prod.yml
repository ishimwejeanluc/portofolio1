version: '3.8'

services:
  # Node.js application
  app:
    image: ishimwejeanluc/portfolio-app:latest
    deploy:
      replicas: 3  # Multiple replicas for high availability
      restart_policy:
        condition: any
      update_config:
        parallelism: 1
        delay: 10s
    environment:
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=Lukatoni123
      - DB_NAME=portofolio
      - DB_PORT=3306
    networks:
      - portfolio-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`portfolio.auca.ac.rw`)"
      - "traefik.http.routers.app.entrypoints=web"
      - "traefik.http.services.app.loadbalancer.server.port=3000"

  # MySQL database with data persistence
  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=Lukatoni123
      - MYSQL_DATABASE=portofolio
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - portfolio-network
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure

  # Traefik as reverse proxy and load balancer
  traefik:
    image: traefik:v2.9
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.swarmMode=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/etc/traefik
    networks:
      - portfolio-network
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure

volumes:
  mysql_data:

networks:
  portfolio-network:
    driver: overlay
